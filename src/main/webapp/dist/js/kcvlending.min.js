/*! kcvlending 2014-08-11 */
"use strict";angular.module("KCVLending",["ui.router","ngCookies","ui.utils","KCVLendingFilters","KCVLendingServices","KCVLendingDirectives","KCVLendingControllers"]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","USER_ROLES",function($stateProvider,$urlRouterProvider,$locationProvider,$httpProvider,roles){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"templates/home.html",data:{authorizedRoles:[roles.all]}}).state("about",{url:"/about",templateUrl:"templates/about.html",data:{authorizedRoles:[roles.all]}}).state("contact",{url:"/contact",templateUrl:"templates/contact.html",data:{authorizedRoles:[roles.all]}}).state("feedback",{url:"/feedback",templateUrl:"templates/feedback.html",data:{authorizedRoles:[roles.all]}}).state("privacy",{url:"/privacy",templateUrl:"templates/privacy.html",data:{authorizedRoles:[roles.all]}}).state("lenderCriteriaForm",{url:"/lenderCriteriaForm",templateUrl:"templates/lender-criteria-form.html",data:{authorizedRoles:[roles.lender]}}).state("loanRequestsList",{url:"/loanRequestsList",templateUrl:"templates/lender-loan-request-list.html",data:{authorizedRoles:[roles.lender]}}).state("loanRequestForm",{url:"/loanRequestForm",templateUrl:"templates/borrower-loan-request-form.html",data:{authorizedRoles:[roles.borrower]}}).state("signup",{url:"/signup",templateUrl:"templates/signup.html",data:{authorizedRoles:[roles.all]}}),$locationProvider.hashPrefix("!"),$httpProvider.interceptors.push(["$injector",function($injector){return $injector.get("AuthInterceptor")}])}]).run(["$rootScope","AUTH_EVENTS","AuthService","USER_ROLES","Auth","Session",function($rootScope,events,AuthService,roles,Auth,Session){Auth.get(function(user){null!=user&&Session.create(user)}),$rootScope.$on("$stateChangeStart",function(event,next){var authorizedRoles=next.data.authorizedRoles;-1!==authorizedRoles.indexOf(roles.all)||AuthService.isAuthorized(authorizedRoles)||(event.preventDefault(),$rootScope.$broadcast(AuthService.isAuthenticated()?events.notAuthorized:events.notAuthenticated))})}]).constant("USER_ROLES",{all:"*",lender:"LENDER",borrower:"BORROWER"}).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"});var reconciliationServices=angular.module("KCVLendingServices",["ngResource"]);reconciliationServices.factory("Auth",["$resource",function($resource){return $resource("http://localhost:8080/api/user/:action",{},{authenticate:{method:"POST",params:{action:"authenticate"},headers:{"Content-Type":"application/x-www-form-urlencoded"}},logout:{method:"POST",params:{action:"logout"}}})}]),reconciliationServices.factory("AuthService",["Session",function(Session){var authService={};return authService.isAuthenticated=function(){return!!Session.user},authService.isAuthorized=function(authorizedRoles){return angular.isArray(authorizedRoles)||(authorizedRoles=[authorizedRoles]),authService.isAuthenticated()&&-1!==authorizedRoles.indexOf(Session.user.userRole)},authService}]),reconciliationServices.service("Session",function(){return this.create=function(user){this.user=user},this.destroy=function(){this.user=null},this}),reconciliationServices.factory("AuthInterceptor",["$rootScope","$q","AUTH_EVENTS",function($rootScope,$q,events){return{responseError:function(response){return $rootScope.$broadcast({401:events.notAuthenticated,403:events.notAuthorized,419:events.sessionTimeout,440:events.sessionTimeout}[response.status],response),$q.reject(response)}}}]);var reconciliationControllers=angular.module("KCVLendingControllers",[]);reconciliationControllers.controller("ApplicationController",["$scope","USER_ROLES","AuthService","AUTH_EVENTS","$state","Session","Auth",function($scope,roles,AuthService,events,$state,Session,Auth){$scope.menuUrl="/templates/header.html",$scope.user=null,$scope.userRoles=roles,$scope.isAuthenticated=AuthService.isAuthenticated,$scope.isAuthorized=AuthService.isAuthorized,$scope.setCurrentUser=function(user){$scope.user=user},$scope.$on(events.notAuthenticated,function(){$scope.resetHeader(),$state.go("home")}),$scope.$on(events.loginSuccess,function(){$scope.resetHeader(),$state.go("home")}),$scope.$on(events.logoutSuccess,function(){Auth.logout(function(){console.log("logout success"),Session.destroy(),$scope.resetHeader()})}),$scope.resetHeader=function(){$scope.menuUrl=null,$scope.menuUrl="/templates/header.html"}}]),reconciliationControllers.controller("HomeController",["$scope",function(){}]),reconciliationControllers.controller("HeaderController",["$scope","$rootScope","AUTH_EVENTS","Auth","Session",function($scope,$rootScope,events,Auth,Session){$scope.credentials={username:"",password:""},$scope.signout=function(){$rootScope.$broadcast(events.logoutSuccess)},$scope.login=function(){Auth.authenticate($.param({username:$scope.credentials.username,password:$scope.credentials.password}),function(user){console.log(user),$rootScope.$broadcast(events.loginSuccess),$scope.setCurrentUser(user),Session.create(user)},function(error){console.log("Unable to authenticate: "+JSON.stringify(error)),$rootScope.$broadcast(events.loginFailed)})}}]),reconciliationControllers.controller("SignupController",["$scope",function(){}]),reconciliationControllers.controller("LoanRequestFormController",["$scope",function(){}]),reconciliationControllers.controller("LenderCriteriaFormController",["$scope",function(){}]);var reconciliationFilters=angular.module("KCVLendingFilters",[]);reconciliationFilters.filter("databaseUrl",[function(){return function(databaseConfiguration){return databaseConfiguration.hostname+":"+databaseConfiguration.port}}]),reconciliationFilters.filter("databaseDatasource",[function(){return function(configurations){var databaseConfigurations=[];return configurations.forEach(function(configuration){"LDAP"!==configuration.datasource&&databaseConfigurations.push(configuration)}),databaseConfigurations}}]),reconciliationFilters.filter("ldapDatasource",[function(){return function(configurations){var ldapConfigurations=[];return configurations.forEach(function(configuration){"LDAP"===configuration.datasource&&ldapConfigurations.push(configuration)}),ldapConfigurations}}]),angular.module("KCVLendingDirectives",[]);